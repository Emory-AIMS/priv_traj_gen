# register enviornment variables

# prepare.sh
# docker run -it -e DATASET=geolife_test kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./preprare.sh"
# export DATASET=geolife_test

# preprocess.sh
# docker run -it -e DATASET=chengdu -e SEED=0 -e MAX_SIZE=10000 -e N_BINS=30 -e T_THRESH=30 -e L_THRESH=200 -e TRUNCATE=21 kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./preprocess.sh"
# export DATASET=chengdu
# export MAX_SIZE=10000
# export SEED=0
# export N_BINS=30
# export L_THRESH=200
# export T_THRESH=30
# export TRUNCATE=0

# train.sh
# docker run -it --gpus all -e DATASET=chengdu -e SEED=0 -e TRAINING_SEED=0 -e META_N_ITER=10000 -e MAX_SIZE=10000 -e SEED=0 -e EPOCH=100 -e N_BINS=30 -e L_THRESH=200 -e T_THRESH=30 -e P_BATCH=100 -e N_TEST=30 -e DP=True -e MULTI_TASK=True -e CONSISTENT=False -e MULTILAYER=False -e HIDDEN_DIM=64 -e LOC_DIM=64 -e MEM_DIM=64 -e MEM_HIDDEN_DIM=64 -e COEF_TIME=1 kyotohiemrnet.azurecr.io/hiemrnet_cu117 /bin/bash -c "./train.sh"
# export DATASET=chengdu
# export MAX_SIZE=10000
# export SEED=0
# export TRAINING_SEED=0
# export META_N_ITER=10
# export EPOCH=100
# export N_BINS=30
# export L_THRESH=200
# export T_THRESH=30
# export P_BATCH=100
# export N_TEST=30
# export DP=True
# export MULTI_TASK=True
# export CONSISTENT=False
# export MULTILAYER=False
# export HIDDEN_DIM=64
# export LOC_DIM=64
# export MEM_DIM=64
# export MEM_HIDDEN_DIM=64
# export COEF_TIME=1

# evaluate.sh
# docker run -it -e L_THRESH=200 -e T_THRESH=30 -e N_BINS=30 -e SEED=0 -e MODEL_DIR=/data/results/chengdu/10000/200_30_bin30_seed0/fulllinear_quadtree_dpTrue_meta10000_dim32_32_32_128_btch0_cldepth_1000_trTrue_coFalse_mulkeyquery kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./evaluate.sh"
export L_THRESH=200
export T_THRESH=30
export N_BINS=30
export SEED=0
export MODEL_DIR=/data/results/chengdu/10000/200_30_bin30_seed0/fulllinear_quadtree_dpTrue_meta10000_dim32_32_32_128_btch0_cldepth_1000_trTrue_coFalse_mulkeyquery
# /data/results/chengdu/10000/200_30_bin30_seed0/fulllinear_quadtree_dpTrue_meta10000_dim100_64_64_256_btch0_cldepth_1000_trTrue_coFalse_mulkey

# MTNet/run.sh
# docker run -it -e DATASET=chengdu -e SEED=0 -e MAX_SIZE=0 -e DP=True -e EPOCH=100 -e MAX_LENGTH=100 -e P_BATCH=100 -e INDICE_PATH=/data/chengdu/10000/200_30_bin30_seed0/indice.json kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "cd MTNet && ./run.sh"
# export DATASET=chengdu
# export MAX_SIZE=10000
# l_thresh=200
# t_thresh=30
# n_bins=30
# seed=0
# export INDICE_PATH=/data/${DATASET}/${MAX_SIZE}/${l_thresh}_${t_thresh}_bin${n_bins}_seed${seed}/indice.json
# export SEED=0
# export DP=True
# export EPOCH=10
# export MAX_LENGTH=100
# export P_BATCH=40

# INDICE_PATH=/data/chengdu/10000/200_30_bin30_seed0/indice.json

# docker run -it --gpus all -e L_THRESH=200 -e T_THRESH=30 -e N_BINS=30 -e SEED=0 -e MODEL_DIR=/data/results/chengdu/10000/200_30_bin30_seed0/fulllinear_quadtree_dpTrue_meta10000_dim100_64_64_256_btch0_cldepth_1000_trTrue_coFalse_mulkeyquery kyotohiemrnet.azurecr.io/hiemrnet_cu117 /bin/bash -c "./evaluate.sh"

# sudo apt install build-essential
# sudo apt install ubuntu-drivers-common
# export DRIVER_VERSION=440.95.01
# export BASE_URL=https://us.download.nvidia.com/tesla
# curl -fSsl -O ${BASE_URL}/${DRIVER_VERSION}/NVIDIA-Linux-x86_64-${DRIVER_VERSION}.run
# sudo bash NVIDIA-Linux-x86_64-${DRIVER_VERSION}.run
# sudo add-apt-repository ppa:graphics-drivers/ppa
