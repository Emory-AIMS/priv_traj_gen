# register enviornment variables

# prepare.sh
# docker run -it -e DATASET=geolife_test kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./preprare.sh"
# export DATASET=geolife_test

# preprocess.sh
# docker run -it -e DATASET=geolife_test_mm -e SEED=0 -e MAX_SIZE=0 -e N_BINS=30 -e T_THRESH=30 -e L_THRESH=200 kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./preprocess.sh"
# export DATASET=chengdu
# export MAX_SIZE=10000
# export SEED=0
# export N_BINS=30
# export L_THRESH=200
# export T_THRESH=30

# train.sh
<<<<<<< HEAD
# export DATASET=chengdu
# export MAX_SIZE=10000
# export SEED=0
# export TRAINING_SEED=0
# export META_N_ITER=10000
# export EPOCH=100
# export N_BINS=30
# export L_THRESH=200
# export T_THRESH=30
# export P_BATCH=100
# export N_TEST=30
# export DP=True
# export MULTI_TASK=True
# export CONSISTENT=False
# export MULTILAYER=False
=======
export DATASET=chengdu
export MAX_SIZE=10000
export SEED=0
export TRAINING_SEED=0
export META_N_ITER=0
export EPOCH=100
export N_BINS=30
export L_THRESH=0
export T_THRESH=0
export P_BATCH=100
export N_TEST=30
export DP=True
export MULTI_TASK=True
export CONSISTENT=False
export MULTILAYER=False
>>>>>>> 6371fa39174a8e966999c837107e4ca374ad795c

# evaluate.sh
# docker run -it -e L_THRESH=200 -e T_THRESH=30 -e N_BINS=30 -e SEED=0 -e MODEL_DIR=/data/results/chengdu/10000/200_30_bin30_seed0/fulllinear_quadtree_dpTrue_meta10000_dim100_64_64_256_btch0_cldepth_1000_trTrue_coTrue kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./evaluate.sh"
# export L_THRESH=200
# export T_THRESH=30
# export N_BINS=30
# export SEED=0
# export MODEL_DIR=/data/results/geolife_test_mm/0/200_30_bin30_seed0/fulllinear_quadtree_dpTrue_meta0_dim100_64_64_256_btch0_cldepth_1000_trTrue_coTrue

# MTNet/run.sh
# docker run -it -e DATASET=chengdu -e SEED=0 -e MAX_SIZE=0 -e DP=True -e EPOCH=100 -e MAX_LENGTH=100 -e P_BATCH=100 -e INDICE_PATH=/data/chengdu/10000/200_30_bin30_seed0/indice.json kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "cd MTNet && ./run.sh"
export DATASET=chengdu
export MAX_SIZE=10000
l_thresh=200
t_thresh=30
n_bins=30
seed=0
export INDICE_PATH=/data/${DATASET}/${MAX_SIZE}/${l_thresh}_${t_thresh}_bin${n_bins}_seed${seed}/indice.json
export SEED=0
export DP=True
export EPOCH=10
export MAX_LENGTH=100
export P_BATCH=40

# INDICE_PATH=/data/chengdu/10000/200_30_bin30_seed0/indice.json

# docker run -it -e L_THRESH=200 -e T_THRESH=30 -e N_BINS=30 -e SEED=0 -e MODEL_DIR=/data/results/geolife/0//MTNET_DPTrue kyotohiemrnet.azurecr.io/hiemrnet /bin/bash -c "./evaluate.sh"

# sudo apt install build-essential
# sudo apt install ubuntu-drivers-common
# export DRIVER_VERSION=440.95.01
# export BASE_URL=https://us.download.nvidia.com/tesla
# curl -fSsl -O ${BASE_URL}/${DRIVER_VERSION}/NVIDIA-Linux-x86_64-${DRIVER_VERSION}.run
# sudo bash NVIDIA-Linux-x86_64-${DRIVER_VERSION}.run
# sudo add-apt-repository ppa:graphics-drivers/ppa
